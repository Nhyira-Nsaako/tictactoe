# import random

# print("Let's play Tic Tac Toe!")
# print("-----------------------")
# player = input("Enter player name: ")
# print(f"{player.capitalize()}, you play X")

# possibleNumbers = [1,2,3,4,5,6,7,8,9]
# gameBoard = [[1,2,3], [4,5,6], [7,8,9]]
# rows = 3
# columns = 3

# def printGameBoard():
#     for x in range(rows):
#         print("\n+---+---+---+")
#         print("|" , end="")
#         for y in range(columns):
#             print("", gameBoard[x][y], end=" |")
#     print("\n+---+---+---+")   

# def modifyArray(num, turn):
#     num -= 1
#     if (num == 0):
#         gameBoard [0][0]= turn
#     elif (num == 1):
#         gameBoard [0][1]= turn
#     elif (num == 2):
#         gameBoard [0][2]= turn
#     elif (num == 3):
#         gameBoard [1][0]= turn
#     elif (num == 4):
#         gameBoard [1][1]= turn
#     elif (num == 5):
#         gameBoard [1][2]= turn
#     elif (num == 6):
#         gameBoard [2][0]= turn
#     elif (num == 7):
#         gameBoard [2][1]= turn
#     elif (num == 8):
#         gameBoard [2][2]= turn
# def checkWinner(gameBoard):   
#     # Check rows
#     for row in gameBoard:
#         if all(cell == 'X' for cell in row):
#             print(f"{player.capitalize()} has won!")
#             return 'X'
#         elif all(cell == 'O' for cell in row):
#             print("O has won!")
#             return 'O'

#     # Check columns
#     for col in range(columns):
#         if all(gameBoard[row][col] == 'X' for row in range(rows)):
#             print(f"{player.capitalize()} has won!")
#             return 'X'
#         elif all(gameBoard[row][col] == 'O' for row in range(rows)):
#             print("O has won!")
#             return 'O'

#     # Check diagonals
#     if all(gameBoard[i][i] == 'X' for i in range(rows)):
#         print(f"{player.capitalize()} has won!")
#         return 'X'
#     elif all(gameBoard[i][i] == 'O' for i in range(rows)):
#         print("O has won!")
#         return 'O'
#     elif all(gameBoard[i][rows - 1 - i] == 'X' for i in range(rows)):
#         print(f"{player.capitalize()} has won!")
#         return 'X'
#     elif all(gameBoard[i][rows - 1 - i] == 'O' for i in range(rows)):
#         print("O has won!")
#         return 'O'

#     return None  # No winner yet

# leaveLoop = False
# turncounter = 0

# while not leaveLoop:
#     # Player's turn
#     if turncounter % 2 == 0:
#         printGameBoard()
#         pickNumber = int(input("\nPick a number [1-9]: "))
#         if pickNumber in possibleNumbers:
#             modifyArray(pickNumber, 'X')
#             possibleNumbers.remove(pickNumber)
#             turncounter += 1
#             winner = checkWinner(gameBoard)
#             if winner:
#                 leaveLoop = True
#         else:
#             print("Invalid input. Please try again.")
#     # Computer's turn
#     else:
#         if possibleNumbers:  # Check if there are still available moves
#             while True:
#                 cpuChoice = random.choice(possibleNumbers)
#                 if cpuChoice in possibleNumbers:
#                     modifyArray(cpuChoice, 'O')
#                     possibleNumbers.remove(cpuChoice)
#                     turncounter += 1
#                     winner = checkWinner(gameBoard)
#                     if winner:
#                         leaveLoop = True
#                     break
#         else:
#             print("It's a tie!")
#             leaveLoop = True
# print("Thank you for playing!")

import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 10)

def check_winner(board):
    # Check rows
    for row in board:
        if row.count(row[0]) == len(row) and row[0] != " ":
            return True, row[0]

    # Check columns
    for col in range(len(board)):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != " ":
            return True, board[0][col]

    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != " ":
        return True, board[0][0]
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != " ":
        return True, board[0][2]

    return False, None

def tic_tac_toe_two_players(player_one, player_two):
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    while True:
        print_board(board)
        row = int(input(f"{current_player}'s turn. Enter row number (1, 2, or 3): ")) - 1
        col = int(input(f"{current_player}'s turn. Enter column number (1, 2, or 3): ")) - 1

        if board[row][col] == " ":
            board[row][col] = current_player
            winner_found, winner_symbol = check_winner(board)
            if winner_found:
                print_board(board)
                if winner_symbol == "X":
                    print(f"Congratulations {player_one}! You win!")
                else:
                    print(f"Congratulations {player_two}! You win!")
                break
            elif all(board[i][j] != " " for i in range(3) for j in range(3)):
                print_board(board)
                print("It's a tie!")
                break
            current_player = "O" if current_player == "X" else "X"
        else:
            print("That spot is already taken. Try again.")

def tic_tac_toe_vs_computer(player):
    gameBoard = [[1,2,3], [4,5,6], [7,8,9]]
    rows = 3
    columns = 3
    possibleNumbers = [1,2,3,4,5,6,7,8,9]
    turncounter = 0

    def printGameBoard():
        for x in range(rows):
            print("\n+---+---+---+")
            print("|" , end="")
            for y in range(columns):
                print("", gameBoard[x][y], end=" |")
        print("\n+---+---+---+")   

    def modifyArray(num, turn):
        num -= 1
        if (num == 0):
            gameBoard [0][0]= turn
        elif (num == 1):
            gameBoard [0][1]= turn
        elif (num == 2):
            gameBoard [0][2]= turn
        elif (num == 3):
            gameBoard [1][0]= turn
        elif (num == 4):
            gameBoard [1][1]= turn
        elif (num == 5):
            gameBoard [1][2]= turn
        elif (num == 6):
            gameBoard [2][0]= turn
        elif (num == 7):
            gameBoard [2][1]= turn
        elif (num == 8):
            gameBoard [2][2]= turn

    def checkWinner(gameBoard):   
        # Check rows
        for row in gameBoard:
            if all(cell == 'X' for cell in row):
                print(f"{player.capitalize()} has won!")
                return 'X'
            elif all(cell == 'O' for cell in row):
                print("O has won!")
                return 'O'

        # Check columns
        for col in range(columns):
            if all(gameBoard[row][col] == 'X' for row in range(rows)):
                print(f"{player.capitalize()} has won!")
                return 'X'
            elif all(gameBoard[row][col] == 'O' for row in range(rows)):
                print("O has won!")
                return 'O'

        # Check diagonals
        if all(gameBoard[i][i] == 'X' for i in range(rows)):
            print(f"{player.capitalize()} has won!")
            return 'X'
        elif all(gameBoard[i][i] == 'O' for i in range(rows)):
            print("O has won!")
            return 'O'
        elif all(gameBoard[i][rows - 1 - i] == 'X' for i in range(rows)):
            print(f"{player.capitalize()} has won!")
            return 'X'
        elif all(gameBoard[i][rows - 1 - i] == 'O' for i in range(rows)):
            print("O has won!")
            return 'O'

        return None  # No winner yet

    leaveLoop = False

    while not leaveLoop:
        # Player's turn
        if turncounter % 2 == 0:
            printGameBoard()
            pickNumber = int(input("\nPick a number [1-9]: "))
            if pickNumber in possibleNumbers:
                modifyArray(pickNumber, 'X')
                possibleNumbers.remove(pickNumber)
                turncounter += 1
                winner = checkWinner(gameBoard)
                if winner:
                    leaveLoop = True
            else:
                print("Invalid input. Please try again.")
        # Computer's turn
        else:
            if possibleNumbers:  # Check if there are still available moves
                while True:
                    cpuChoice = random.choice(possibleNumbers)
                    if cpuChoice in possibleNumbers:
                        modifyArray(cpuChoice, 'O')
                        possibleNumbers.remove(cpuChoice)
                        turncounter += 1
                        winner = checkWinner(gameBoard)
                        if winner:
                            leaveLoop = True
                        break
            else:
                print("It's a tie!")
                leaveLoop = True
    print("Thank you for playing!")

def main():
    print("Welcome to Tic-Tac-Toe!")
    choice = input("Choose the mode:\n1. Play against a friend\n2. Play against the computer\nEnter your choice (1 or 2): ")
    if choice == '1':
        player_one = input("Enter player one's name: ")
        player_two = input("Enter player two's name: ")
        print(f"{player_one} and {player_two}, get ready to play!")
        print("May the best player win!")
        tic_tac_toe_two_players(player_one, player_two)
    elif choice == '2':
        player = input("Enter player name: ")
        print(f"{player.capitalize()}, you play X")
        tic_tac_toe_vs_computer(player)
    else:
        print("Invalid choice. Please enter 1 or 2.")

if __name__ == "__main__":
    main()
